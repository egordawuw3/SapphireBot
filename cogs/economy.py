import disnake
from disnake.ext import commands
from utils.embed_utils import make_embed
from utils.economy_service import EconomyService
from utils.permissions import require_staff
from config.constants import SUCCESS_COLOR, ERROR_COLOR, INFO_COLOR

class Economy(commands.Cog):
    """–≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã SapphireBot."""
    def __init__(self, bot):
        self.bot = bot

    @commands.slash_command(
        name="balance",
        description="–ü–æ–∫–∞–∑–∞—Ç—å –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
    )
    async def balance(self, inter: disnake.ApplicationCommandInteraction, member: disnake.Member = None):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ —Å–≤–æ–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π."""
        member = member or inter.author
        balance = EconomyService.get_balance(str(member.id))
        embed = make_embed(
            title=f"–ö–æ—à–µ–ª—ë–∫ {member.display_name}",
            description=f"–í–∞—à –±–∞–ª–∞–Ω—Å: **{balance} üíé**",
            color=INFO_COLOR,
            thumbnail=member.display_avatar.url
        )
        await inter.response.send_message(embed=embed)

    @commands.slash_command(
        name="add_balance",
        description="–î–æ–±–∞–≤–∏—Ç—å –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é (—Ç–æ–ª—å–∫–æ staff)"
    )
    @require_staff()
    async def add_balance(self, inter: disnake.ApplicationCommandInteraction, member: disnake.Member, amount: int = commands.Param(ge=1), reason: str = "–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞"):
        """–î–æ–±–∞–≤–ª—è–µ—Ç –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é. –¢–æ–ª—å–∫–æ –¥–ª—è staff."""
        new_balance = EconomyService.add_balance(str(member.id), amount)
        embed = make_embed(
            title="–ë–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω",
            description=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {member.mention}\n–°—É–º–º–∞: +{amount} üíé\n–ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: {new_balance} üíé\n–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: {inter.author.mention}\n–ü—Ä–∏—á–∏–Ω–∞: {reason}",
            color=SUCCESS_COLOR
        )
        await inter.response.send_message(embed=embed)

    @commands.slash_command(
        name="remove_balance",
        description="–£–±—Ä–∞—Ç—å –±–∞–ª–∞–Ω—Å —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Ç–æ–ª—å–∫–æ staff)"
    )
    @require_staff()
    async def remove_balance(self, inter: disnake.ApplicationCommandInteraction, member: disnake.Member, amount: int = commands.Param(ge=1), reason: str = "–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞"):
        """–£–º–µ–Ω—å—à–∞–µ—Ç –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –¢–æ–ª—å–∫–æ –¥–ª—è staff."""
        new_balance = EconomyService.remove_balance(str(member.id), amount)
        embed = make_embed(
            title="–ë–∞–ª–∞–Ω—Å —É–º–µ–Ω—å—à–µ–Ω",
            description=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {member.mention}\n–°—É–º–º–∞: -{amount} üíé\n–ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: {new_balance} üíé\n–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: {inter.author.mention}\n–ü—Ä–∏—á–∏–Ω–∞: {reason}",
            color=INFO_COLOR
        )
        await inter.response.send_message(embed=embed)

    @commands.slash_command(
        name="set_balance",
        description="–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é (—Ç–æ–ª—å–∫–æ staff)"
    )
    @require_staff()
    async def set_balance(self, inter: disnake.ApplicationCommandInteraction, member: disnake.Member, amount: int = commands.Param(ge=0), reason: str = "–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞"):
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –¢–æ–ª—å–∫–æ –¥–ª—è staff."""
        EconomyService.set_balance(str(member.id), amount)
        embed = make_embed(
            title="–ë–∞–ª–∞–Ω—Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω",
            description=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {member.mention}\n–ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: {amount} üíé\n–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: {inter.author.mention}\n–ü—Ä–∏—á–∏–Ω–∞: {reason}",
            color=INFO_COLOR
        )
        await inter.response.send_message(embed=embed)

def setup(bot):
    bot.add_cog(Economy(bot))