import disnake
from disnake.ext import commands
import yt_dlp
import asyncio
import logging
import re
from utils.embed_builder import EmbedBuilder
from config.constants import MAX_SONG_DURATION

logger = logging.getLogger("sapphire_bot.music")

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è yt-dlp
ydl_opts = {
    'format': 'bestaudio/best',
    'noplaylist': True,
    'quiet': True,
    'no_warnings': True,
    'default_search': 'auto',
    'source_address': '0.0.0.0',
    'postprocessors': [{
        'key': 'FFmpegExtractAudio',
        'preferredcodec': 'mp3',
        'preferredquality': '192',
    }],
}

class Music(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.ydl = yt_dlp.YoutubeDL(ydl_opts)
        self.active_players = {}  # –°–ª–æ–≤–∞—Ä—å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–ª–µ–µ—Ä–æ–≤

    def is_valid_youtube_url(self, url):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ URL –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–æ–π –Ω–∞ YouTube"""
        youtube_regex = (
            r'(https?://)?(www\.)?'
            r'(youtube|youtu|youtube-nocookie)\.(com|be)/'
            r'(watch\?v=|embed/|v/|.+\?v=)?([^&=%\?]{11})'
        )
        match = re.match(youtube_regex, url)
        return bool(match)

    @commands.slash_command(
        name="mus",
        description="–í–∫–ª—é—á–∏—Ç—å –º—É–∑—ã–∫—É —Å YouTube"
    )
    async def mus(
        self,
        inter: disnake.ApplicationCommandInteraction,
        url: str = commands.Param(description="–°—Å—ã–ª–∫–∞ –Ω–∞ YouTube –≤–∏–¥–µ–æ")
    ):
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ —Å—Å—ã–ª–∫–∞ YouTube
        if not self.is_valid_youtube_url(url):
            return await inter.response.send_message("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ —Å—Å—ã–ª–∫–∏ —Å YouTube!", ephemeral=True)

        if not inter.author.voice:
            return await inter.response.send_message("‚ùå –í—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!", ephemeral=True)

        await inter.response.defer()

        try:
            if not inter.guild.voice_client:
                vc = await inter.author.voice.channel.connect()
            else:
                vc = inter.guild.voice_client
                if vc.is_playing():
                    vc.stop()

            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∏–¥–µ–æ
            loop = self.bot.loop
            try:
                data = await loop.run_in_executor(None, lambda: self.ydl.extract_info(url, download=False))
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–∏–¥–µ–æ: {e}")
                return await inter.followup.send(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∏–¥–µ–æ: {str(e)}", ephemeral=True)
            
            if "entries" in data:
                data = data["entries"][0]

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤–∏–¥–µ–æ (–æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–æ 10 –º–∏–Ω—É—Ç)
            if data.get('duration', 0) > 600:  # 10 –º–∏–Ω—É—Ç –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
                return await inter.followup.send("‚ùå –í–∏–¥–µ–æ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å - 10 –º–∏–Ω—É—Ç.", ephemeral=True)

            # –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –∞—É–¥–∏–æ
            try:
                vc.play(disnake.FFmpegPCMAudio(data['url']))
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º –ø–ª–µ–µ—Ä–µ
                self.active_players[inter.guild.id] = {
                    'title': data['title'],
                    'url': url,
                    'requester': inter.author.id,
                    'channel': inter.channel.id
                }
                
                embed = disnake.Embed(
                    title="üéµ –°–µ–π—á–∞—Å –∏–≥—Ä–∞–µ—Ç",
                    description=f"**{data['title']}**",
                    color=0x3498db
                )
                embed.set_thumbnail(url=data.get('thumbnail', ''))
                embed.add_field(name="–ó–∞–ø—Ä–æ—Å–∏–ª", value=inter.author.mention, inline=True)
                embed.add_field(name="–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å", value=self.format_duration(data.get('duration', 0)), inline=True)
                
                await inter.followup.send(embed=embed)
                logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {inter.author.id} –≤–∫–ª—é—á–∏–ª –º—É–∑—ã–∫—É: {data['title']}")
                
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–∏ –∞—É–¥–∏–æ: {e}")
                await inter.followup.send(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–∏: {str(e)}", ephemeral=True)

        except Exception as e:
            logger.error(f"–û–±—â–∞—è –æ—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ mus: {e}")
            await inter.followup.send(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–∏: {str(e)}", ephemeral=True)

    @commands.slash_command(name="stop", description="–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ")
    async def stop(self, inter: disnake.ApplicationCommandInteraction):
        """–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ"""
        if not inter.guild.voice_client:
            return await inter.response.send_message("‚ùå –ë–æ—Ç –Ω–µ –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!", ephemeral=True)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Ç–æ–º –∂–µ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ
        if not inter.author.voice or inter.author.voice.channel != inter.guild.voice_client.channel:
            return await inter.response.send_message("‚ùå –í—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ —Ç–æ–º –∂–µ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ, —á—Ç–æ –∏ –±–æ—Ç!", ephemeral=True)
        
        inter.guild.voice_client.stop()
        
        # –£–¥–∞–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–ª–µ–µ—Ä–µ
        if inter.guild.id in self.active_players:
            del self.active_players[inter.guild.id]
            
        await inter.response.send_message("‚èπÔ∏è –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!")
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {inter.author.id} –æ—Å—Ç–∞–Ω–æ–≤–∏–ª –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –º—É–∑—ã–∫–∏")

    def format_duration(self, seconds):
        """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤ —Å–µ–∫—É–Ω–¥–∞—Ö –≤ —Ñ–æ—Ä–º–∞—Ç MM:SS"""
        minutes, seconds = divmod(seconds, 60)
        return f"{minutes}:{seconds:02d}"

def setup(bot):
    bot.add_cog(Music(bot))