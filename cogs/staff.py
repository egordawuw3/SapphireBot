import disnake
from disnake.ext import commands
import asyncio
from datetime import datetime

class Staff(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.staff_role_id = 1207281299849744385

    async def check_staff(self, inter: disnake.ApplicationCommandInteraction) -> bool:
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Ä–æ–ª–∏ staff"""
        staff_role = inter.guild.get_role(self.staff_role_id)
        if staff_role not in inter.author.roles:
            embed = disnake.Embed(
                title="‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞",
                description="–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!",
                color=0xff0000
            )
            await inter.response.send_message(embed=embed, ephemeral=True)
            return False
        return True

    @commands.slash_command(
        name="ban",
        description="–ó–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –ø—Ä–∏—á–∏–Ω—ã"
    )
    async def ban(
        self, 
        inter: disnake.ApplicationCommandInteraction,
        member: disnake.Member,
        reason: str = "–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞",
        delete_messages_days: int = commands.Param(
            default=0,
            description="–£–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ N –¥–Ω–µ–π (0-7)",
            ge=0,
            le=7
        )
    ):
        if not await self.check_staff(inter):
            return
        
        if member.top_role >= inter.author.top_role:
            embed = disnake.Embed(
                title="‚ùå –û—à–∏–±–∫–∞",
                description="–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞–±–∞–Ω–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ —Å —Ä–∞–≤–Ω–æ–π –∏–ª–∏ –±–æ–ª–µ–µ –≤—ã—Å–æ–∫–æ–π —Ä–æ–ª—å—é!",
                color=0xff0000
            )
            return await inter.response.send_message(embed=embed, ephemeral=True)

        try:
            await member.ban(reason=reason, delete_message_days=delete_messages_days)
            
            embed = disnake.Embed(
                title="üî® –ë–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
                color=0xff0000,
                timestamp=datetime.now()
            )
            embed.add_field(name="–ó–∞–±–∞–Ω–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", value=f"{member.mention} (`{member.id}`)", inline=False)
            embed.add_field(name="–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä", value=f"{inter.author.mention}", inline=True)
            embed.add_field(name="–ü—Ä–∏—á–∏–Ω–∞", value=reason, inline=True)
            if delete_messages_days > 0:
                embed.add_field(name="–£–¥–∞–ª–µ–Ω—ã —Å–æ–æ–±—â–µ–Ω–∏—è –∑–∞", value=f"{delete_messages_days} –¥–Ω–µ–π", inline=True)
            
            await inter.response.send_message(embed=embed)
            
            try:
                dm_embed = disnake.Embed(
                    title="üî® –í—ã –±—ã–ª–∏ –∑–∞–±–∞–Ω–µ–Ω—ã",
                    description=f"**–°–µ—Ä–≤–µ—Ä:** {inter.guild.name}\n**–ü—Ä–∏—á–∏–Ω–∞:** {reason}",
                    color=0xff0000
                )
                await member.send(embed=dm_embed)
            except:
                pass
                
        except Exception as e:
            embed = disnake.Embed(
                title="‚ùå –û—à–∏–±–∫–∞",
                description=f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {str(e)}",
                color=0xff0000
            )
            await inter.response.send_message(embed=embed, ephemeral=True)

    @commands.slash_command(
        name="unban",
        description="–†–∞–∑–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID"
    )
    async def unban(
        self,
        inter: disnake.ApplicationCommandInteraction,
        user_id: str = commands.Param(description="ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ä–∞–∑–±–∞–Ω–∞")
    ):
        if not await self.check_staff(inter):
            return
        
        try:
            user = await self.bot.fetch_user(int(user_id))
            await inter.guild.unban(user)
            
            embed = disnake.Embed(
                title="üîì –†–∞–∑–±–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
                color=0x00ff00,
                timestamp=datetime.now()
            )
            embed.add_field(name="–†–∞–∑–±–∞–Ω–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", value=f"{user.mention} (`{user.id}`)", inline=False)
            embed.add_field(name="–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä", value=f"{inter.author.mention}", inline=True)
            
            await inter.response.send_message(embed=embed)
            
        except ValueError:
            embed = disnake.Embed(
                title="‚ùå –û—à–∏–±–∫–∞",
                description="–£–∫–∞–∑–∞–Ω –Ω–µ–≤–µ—Ä–Ω—ã–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!",
                color=0xff0000
            )
            await inter.response.send_message(embed=embed, ephemeral=True)
        except Exception as e:
            embed = disnake.Embed(
                title="‚ùå –û—à–∏–±–∫–∞",
                description=f"–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞–∑–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {str(e)}",
                color=0xff0000
            )
            await inter.response.send_message(embed=embed, ephemeral=True)

    @commands.slash_command(
        name="mute",
        description="–ó–∞–º—É—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è"
    )
    async def mute(
        self,
        inter: disnake.ApplicationCommandInteraction,
        member: disnake.Member,
        duration: int = commands.Param(description="–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –º—É—Ç–∞ –≤ –º–∏–Ω—É—Ç–∞—Ö"),
        reason: str = "–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞"
    ):
        if not await self.check_staff(inter):
            return
        
        if member.top_role >= inter.author.top_role:
            embed = disnake.Embed(
                title="‚ùå –û—à–∏–±–∫–∞",
                description="–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞–º—É—Ç–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ —Å —Ä–∞–≤–Ω–æ–π –∏–ª–∏ –±–æ–ª–µ–µ –≤—ã—Å–æ–∫–æ–π —Ä–æ–ª—å—é!",
                color=0xff0000
            )
            return await inter.response.send_message(embed=embed, ephemeral=True)

        try:
            await member.timeout(duration=duration * 60, reason=reason)
            
            embed = disnake.Embed(
                title="üîá –ú—É—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
                color=0xff9900,
                timestamp=datetime.now()
            )
            embed.add_field(name="–ó–∞–º—É—á–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", value=f"{member.mention} (`{member.id}`)", inline=False)
            embed.add_field(name="–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä", value=f"{inter.author.mention}", inline=True)
            embed.add_field(name="–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å", value=f"{duration} –º–∏–Ω—É—Ç", inline=True)
            embed.add_field(name="–ü—Ä–∏—á–∏–Ω–∞", value=reason, inline=True)
            
            await inter.response.send_message(embed=embed)
            
            try:
                dm_embed = disnake.Embed(
                    title="üîá –í—ã –±—ã–ª–∏ –∑–∞–º—É—á–µ–Ω—ã",
                    description=f"**–°–µ—Ä–≤–µ—Ä:** {inter.guild.name}\n**–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:** {duration} –º–∏–Ω—É—Ç\n**–ü—Ä–∏—á–∏–Ω–∞:** {reason}",
                    color=0xff9900
                )
                await member.send(embed=dm_embed)
            except:
                pass
                
        except Exception as e:
            embed = disnake.Embed(
                title="‚ùå –û—à–∏–±–∫–∞",
                description=f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–º—É—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {str(e)}",
                color=0xff0000
            )
            await inter.response.send_message(embed=embed, ephemeral=True)

    @commands.slash_command(
        name="unmute",
        description="–†–∞–∑–º—É—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
    )
    async def unmute(
        self,
        inter: disnake.ApplicationCommandInteraction,
        member: disnake.Member
    ):
        if not await self.check_staff(inter):
            return

        try:
            await member.timeout(duration=0)
            
            embed = disnake.Embed(
                title="üîä –†–∞–∑–º—É—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
                color=0x00ff00,
                timestamp=datetime.now()
            )
            embed.add_field(name="–†–∞–∑–º—É—á–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", value=f"{member.mention} (`{member.id}`)", inline=False)
            embed.add_field(name="–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä", value=f"{inter.author.mention}", inline=True)
            
            await inter.response.send_message(embed=embed)
            
            try:
                dm_embed = disnake.Embed(
                    title="üîä –í—ã –±—ã–ª–∏ —Ä–∞–∑–º—É—á–µ–Ω—ã",
                    description=f"**–°–µ—Ä–≤–µ—Ä:** {inter.guild.name}",
                    color=0x00ff00
                )
                await member.send(embed=dm_embed)
            except:
                pass
                
        except Exception as e:
            embed = disnake.Embed(
                title="‚ùå –û—à–∏–±–∫–∞",
                description=f"–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞–∑–º—É—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {str(e)}",
                color=0xff0000
            )
            await inter.response.send_message(embed=embed, ephemeral=True)

    @commands.slash_command(
        name="clear",
        description="–û—á–∏—Å—Ç–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ"
    )
    async def clear(
        self,
        inter: disnake.ApplicationCommandInteraction,
        amount: int = commands.Param(description="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è", ge=1, le=1000)
    ):
        if not await self.check_staff(inter):
            return
        
        try:
            await inter.response.defer(ephemeral=True)
            deleted = await inter.channel.purge(limit=amount)
            
            embed = disnake.Embed(
                title="üßπ –û—á–∏—Å—Ç–∫–∞ —á–∞—Ç–∞",
                description=f"–£–¥–∞–ª–µ–Ω–æ {len(deleted)} —Å–æ–æ–±—â–µ–Ω–∏–π",
                color=0x00ff00,
                timestamp=datetime.now()
            )
            embed.add_field(name="–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä", value=f"{inter.author.mention}", inline=True)
            embed.add_field(name="–ö–∞–Ω–∞–ª", value=f"{inter.channel.mention}", inline=True)
            
            msg = await inter.channel.send(embed=embed)
            await asyncio.sleep(5)
            await msg.delete()
            
            await inter.edit_original_message(
                embed=disnake.Embed(
                    description=f"‚úÖ –£—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ {len(deleted)} —Å–æ–æ–±—â–µ–Ω–∏–π",
                    color=0x00ff00
                )
            )
            
        except Exception as e:
            embed = disnake.Embed(
                title="‚ùå –û—à–∏–±–∫–∞",
                description=f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è: {str(e)}",
                color=0xff0000
            )
            await inter.edit_original_message(embed=embed)

def setup(bot):
    bot.add_cog(Staff(bot))